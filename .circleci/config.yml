version: 2
jobs:
  build-macos:
    working_directory: ~/tidepool-org/chrome-uploader
    parallelism: 1
    # CircleCI 2.0 does not support environment variables that refer to each other the same way as 1.0 did.
    # If any of these refer to each other, rewrite them so that they don't or see https://circleci.com/docs/2.0/env-vars/#interpolating-environment-variables-to-set-other-environment-variables .
    environment:
      BASH_ENV: ".circleci/bash_env.sh"
    macos:
      xcode: '14.2.0'
    steps:
    - checkout
    - run: git submodule sync
    - run: git submodule update --init
    - run: echo 'export PATH=${PATH}:${HOME}/${CIRCLE_PROJECT_REPONAME}/node_modules/.bin' >> $BASH_ENV
    - restore_cache:
        key: dependency-cache-{{ checksum "package.json" }}
    - run:
        name: Install nvm and node
        command: |
          set +e
          curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.5/install.sh | bash
          source ~/.nvm/nvm.sh
          nvm install v16.14.2
          nvm alias default v16.14.2
    - run: node -v
    - run: curl -o- -L https://yarnpkg.com/install.sh | bash
    - run: yarn config set cache-folder ~/.cache/yarn
    - run: yarn --frozen-lockfile
    - save_cache:
        key: dependency-cache-{{ checksum "package.json" }}
        paths:
        - ~/.cache/yarn
        - ./node_modules
    # Test
    - run: yarn lint
    - run: yarn test
    # Package
    - run:
        name: Install intermediate certificates
        command: |
          sudo security delete-certificate -Z FF6797793A3CD798DC5B2ABEF56F73EDC9F83A64
          curl -o AppleWWDRCA.cer https://developer.apple.com/certificationauthority/AppleWWDRCA.cer && sudo security add-trusted-cert -d -r trustRoot -k /Library/Keychains/System.keychain AppleWWDRCA.cer
          curl -o AppleWWDRCAG2.cer https://www.apple.com/certificateauthority/AppleWWDRCAG2.cer && sudo security add-trusted-cert -d -r trustRoot -k /Library/Keychains/System.keychain AppleWWDRCAG2.cer 
          curl -o AppleWWDRCAG3.cer https://www.apple.com/certificateauthority/AppleWWDRCAG3.cer && sudo security add-trusted-cert -d -r trustRoot -k /Library/Keychains/System.keychain AppleWWDRCAG3.cer
          curl -o AppleWWDRCAG4.cer https://www.apple.com/certificateauthority/AppleWWDRCAG4.cer && sudo security add-trusted-cert -d -r trustRoot -k /Library/Keychains/System.keychain AppleWWDRCAG4.cer
          curl -o AppleWWDRCAG5.cer https://www.apple.com/certificateauthority/AppleWWDRCAG5.cer && sudo security add-trusted-cert -d -r trustRoot -k /Library/Keychains/System.keychain AppleWWDRCAG5.cer
          curl -o AppleWWDRCAG6.cer https://www.apple.com/certificateauthority/AppleWWDRCAG6.cer && sudo security add-trusted-cert -d -r trustRoot -k /Library/Keychains/System.keychain AppleWWDRCAG6.cer
    - run: if [ -z "$CIRCLE_PR_NUMBER" ]; then yarn package; else echo "Forked repo; no package built."; fi
  build-windows:
    machine:
      # see https://circleci.com/developer/machine/image/windows-server-2019 for details
      image: windows-server-2019-vs2019:stable
      resource_class: windows.medium
      shell: bash.exe
    steps:
      - checkout
      - run: git submodule sync
      - run: git submodule update --init
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      # note: node 16.14.2 with npm 8.3.1 breaks yarn installation
      - run: nvm install v16.13.2
      - run: nvm use v16.13.2
      - run: node -v
      - run: npm install --global yarn
      - run: yarn config set cache-folder ~/.cache/yarn
      - run: yarn --frozen-lockfile
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
          - ~/.cache/yarn
          - ./node_modules
      # Test
      - run: yarn lint
      - run: yarn test
      # Package
      - run: if [ -z "$CIRCLE_PR_NUMBER" ]; then yarn package; else echo "Forked repo; no package built."; fi
      - run: if [ -n "$CIRCLE_TAG" ]; then yarn av-whitelist; else echo "Not a tagged release."; fi

# runs build for all branches and all tags starting with v.
workflows:
  version: 2
  build-release:
    jobs:
      - build-macos:
          filters:
            tags:
              only: /^v.*/
      - build-windows:
          filters:
            tags:
              only: /^v.*/
